esphome:
  name: wrsph

esp32:
  board: lolin32
  framework:
    type: arduino

wifi:
  ssid: "--"
  password: "--"
  fast_connect: true
  reboot_timeout: 0s
  id: mywifi
  manual_ip:
    static_ip: 192.168.2.215
    gateway: 192.168.2.100
    subnet: 255.255.255.0
    dns1: 192.168.2.100

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "--"
    password: "--"

mdns:

captive_portal:

# Enable logging
logger: 
  level: DEBUG
  #logs:
  #  uart.component: DEBUG
  
#mqtt:
#  broker: 192.168.2.64
#  discovery : true
#  discovery_retain: true
#  username: Peter
#  password: peter

  
uart: 
  - baud_rate: 9600
    rx_pin: GPIO16
    tx_pin: GPIO17
    id: "modbus_uart"
  
modbus_controller:
  - id: modbus_growatt
    ## the Modbus device addr
    address: 0x1
#    modbus_id: modbus_growatt
    setup_priority: -10
    update_interval: 5000ms


# Enable Home Assistant API
api:
ota:

web_server:
  port: 80
  
text_sensor:
  - platform: wifi_info
    ip_address:
      name: IP Address
    ssid:
      name: Connected SSID
    bssid:
      name: Connected BSSID
    mac_address:
      name: Mac Wifi Address
    
  - platform: template
    name: Uptime Human Readable
    id: uptime_human
    icon: mdi:clock-start
    update_interval: 10s

  - platform: version
    name: "ESPHome Version"


# ------------------------------------------------------------------------------------#

  - platform: modbus_controller
    name: "WorkingmodeText"
    modbus_controller_id: modbus_growatt
    id: textworkingmode
    bitmask: 0
    register_type: read
    address: 0
    raw_encode: HEXBYTES
    lambda: |-
      uint16_t value = modbus_controller::word_from_hex_str(x, 0);
      switch (value) {
        case 0: return std::string("Standby");
        case 1: return std::string("Checking");
        case 2: return std::string("Reserved");
        case 3: return std::string("Sys Fault");
        case 4: return std::string("Flash");
        case 5: return std::string("PV + Bat");
        case 6: return std::string("Bat");
        case 7: return std::string("PV Offline");
        case 8: return std::string("Bat Offline");
        default: return std::string("Unknown");
      }
      return x;


# ------------------------------------------------------------------------------------#

sensor:

# ------------------------------------------------------------------------------------
  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "status"
    id: status
    register_type: read
    address: 0
    unit_of_measurement: ""
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "Power PV"
    id: powerpv
    register_type: read
    address: 1
    unit_of_measurement: "W"
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1    

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "Voltage PV 1"
    id: voltagepv1
    register_type: read
    address: 3
    unit_of_measurement: "V"
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1    

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "Current PV 1"
    id: currentpv1
    register_type: read
    address: 4
    unit_of_measurement: "A"
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1    

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "Power PV 1"
    id: powerpv1
    register_type: read
    address: 5
    unit_of_measurement: "W"
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1    

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "Power output"
    id: poweroutput
    register_type: read
    address: 35
    unit_of_measurement: "W"
    value_type: S_DWORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1    

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "Power TPM 1"
    id: powertpm1
    register_type: read
    address: 40
    unit_of_measurement: "W"
    value_type: S_DWORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1    

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "Power TPM 2"
    id: powertpm2
    register_type: read
    address: 44
    unit_of_measurement: "W"
    value_type: S_DWORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1    

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "Power TPM 3"
    id: powertpm3
    register_type: read
    address: 48
    unit_of_measurement: "W"
    value_type: S_DWORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1    

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "SPH PV1 total energy"
    id: sphpv1totalenergy
    register_type: read
    address: 61
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: "energy"
    value_type: U_DWORD
    accuracy_decimals: 1
    filters: 
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "SPH PV2 total energy"
    id: sphpv2totalenergy
    register_type: read
    address: 65
    unit_of_measurement: "KWh"
    state_class: "total_increasing"
    device_class: "energy"
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1 

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "Working Mode"
    id: workingmode
    register_type: read
    address: 1000
    unit_of_measurement: ""
    value_type: U_WORD
    

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "Bat Discharge Power"
    id: batdischargepower
    register_type: read
    address: 1009
    unit_of_measurement: "W"
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1    

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "Bat Charge Power"
    id: batdchargepower
    register_type: read
    address: 1011
    unit_of_measurement: "W"
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1    

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "BatVoltage"
    id: batvolt
    register_type: read
    address: 1013
    unit_of_measurement: "V"
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1    


  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "SPH SOC"
    id: sphsoc
    register_type: read
    address: 1014
    unit_of_measurement: "%"
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "SPH Bat Discharged Energy"
    id: sphbatdischargedenergy
    register_type: read
    address: 1054
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: "energy"
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: modbus_growatt
    name: "SPH Bat Charged Energy"
    id: sphbatchargedenergy
    register_type: read
    address: 1058
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: "energy"
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

select:
  - platform: modbus_controller
    name: "Workingmode"
    address: 0
    value_type: U_WORD
    optionsmap:
      "Standby" : 0
      "Normal"  : 1
#      "Selftest"      : 1
#      "Reserved"      : 2
#      "Sys Fault"     : 3
#      "Flash"         : 4
#      "PV+Bat Online" : 5
#      "Bat Online"    : 6
#      "PV Offline"    : 7
#      "Bat Offline"   : 8
# ------------------------------------------------------------------------------------


